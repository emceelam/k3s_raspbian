- name: ca_subject
  set_fact:
    ca_subject: /O={{ ca_organization }}/OU={{ ca_organizational_unit }}/L={{ ca_locality }}/ST={{ ca_state_or_province }}/C={{ ca_country }}/CN={{ ca_common_name}}

## root key
#sudo openssl genrsa \
  #-aes256 \
  #-passout pass:rasputin \
  #-out $root_ca/private/ca.key.pem 4096
## password: rasputin
#sudo chmod 400 $root_ca/private/ca.key.pem
- name: generate root key
  become: yes
  shell:
    cmd: |
      openssl genrsa \
        -aes256 \
        -passout pass:{{ ca_password }} \
        -out {{ ca_root_dir}}/private/ca.key.pem \
        4096
    creates: "{{ ca_root_dir}}/private/ca.key.pem"
- name: chmod 400
  become: yes
  file:
    path: "{{ ca_root_dir}}/private/ca.key.pem"
    mode: '0400'

## root certificate
#sudo openssl req \
  #-new \
  #-x509 \
  #-days 7300 \
  #-sha256 \
  #-extensions v3_ca \
  #-subj '/O=My Company Name LTD./OU=Root/L=Paradise/ST=CA/C=US/CN=ns1.example.com' \
  #-config openssl.cnf \
  #-passin file:ca_pass.txt \
  #-key $root_ca/private/ca.key.pem \
  #-out $root_ca/certs/ca.cert.pem
## password: rasputin
#sudo chmod 444 $root_ca/certs/ca.cert.pem
#sudo openssl x509 -noout -text -in $root_ca/certs/ca.cert.pem
- name: generate root certificate
  become: yes
  shell:
    cmd: |
      openssl req \
        -new \
        -x509 \
        -days 7300 \
        -sha256 \
        -extensions v3_ca \
        -subj '{{ ca_subject }}' \
        -config openssl.cnf \
        -passin pass:{{ ca_password }} \
        -key {{ ca_root_dir}}/private/ca.key.pem \
        -out {{ ca_root_dir}}/certs/ca.cert.pem
    creates: "{{ ca_root_dir}}/certs/ca.cert.pem"
- name: chmod 444 $root_ca/certs/ca.cert.pem
  become: yes
  file:
    path: "{{ ca_root_dir}}/certs/ca.cert.pem"
    mode: '0444'

## Create the intermediate key
#sudo openssl genrsa \
  #-aes256 \
  #-passout file:ca_pass.txt \
  #-out $root_ca_intermediate/private/intermediate.key.pem 4096
  ## password: rasputin
#sudo chmod 400 $root_ca_intermediate/private/intermediate.key.pem
- name: create intermediate key
  become: yes
  shell:
    cmd: |
      openssl genrsa \
        -aes256 \
        -passout pass:{{ ca_password }} \
        -out {{ ca_intermediate_dir }}/private/intermediate.key.pem \
        4096
    creates: "{{ ca_intermediate_dir }}/private/intermediate.key.pem"
- name:  chmod 400 $root_ca_intermediate/private/intermediate.key.pem
  become: yes
  file:
    path: "{{ ca_intermediate_dir }}/private/intermediate.key.pem"
    mode: '0400'

## Create intermediate csr
#sudo openssl req \
  #-new -sha256 \
  #-subj '/O=My Company Name LTD./OU=Intermediate/L=Paradise/ST=CA/C=US/CN=ns1.example.com' \
  #-config $root_ca_intermediate/openssl.cnf \
  #-passin file:ca_pass.txt \
  #-key $root_ca_intermediate/private/intermediate.key.pem \
  #-out $root_ca_intermediate/csr/intermediate.csr.pem
- name: create intermediate csr
  become: yes
  shell:
    cmd: |
      openssl req \
        -new -sha256 \
        -subj '{{ ca_subject }}' \
        -config {{ ca_intermediate_dir }}/openssl.cnf \
        -passin pass:{{ ca_password }} \
        -key {{ ca_intermediate_dir }}/private/intermediate.key.pem \
        -out {{ ca_intermediate_dir }}/csr/intermediate.csr.pem
    creates: "{{ ca_intermediate_dir }}/csr/intermediate.csr.pem"

## Create the intermediate certificate
#sudo openssl ca \
  #-config $root_ca/openssl.cnf \
  #-extensions v3_intermediate_ca \
  #-days 3650 \
  #-notext \
  #-md sha256 \
  #-passin file:ca_pass.txt \
  #-batch \
  #-in $root_ca_intermediate/csr/intermediate.csr.pem \
  #-out $root_ca_intermediate/certs/intermediate.cert.pem

## verify intermediate certificate
#sudo openssl x509 \
  #-noout -text \
  #-in $root_ca_intermediate/certs/intermediate.cert.pem

#sudo openssl verify \
  #-CAfile $root_ca/certs/ca.cert.pem \
  #$root_ca_intermediate/certs/intermediate.cert.pem
- name: create intermediate certificate
  become: yes
  shell:
    cmd: |
      openssl ca \
        -config {{ ca_root_dir }}/openssl.cnf \
        -extensions v3_intermediate_ca \
        -days 3650 \
        -notext \
        -md sha256 \
        -passin pass:{{ ca_password }} \
        -batch \
        -in {{ ca_intermediate_dir }}/csr/intermediate.csr.pem \
        -out {{ ca_intermediate_dir }}/certs/intermediate.cert.pem
    creates: "{{ ca_intermediate_dir }}/certs/intermediate.cert.pem"
